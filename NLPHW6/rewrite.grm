Zero = "0";
One = "1";
Bit = "0" | "1";
Digit = "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9";
Even = (Bit)* Zero ; 
Odd = (Bit)* One ;
RevEven = Zero (Bit)*;
RevOdd = One (Bit)*;

export Cross = Optimize ["a" (("b" : "x")* | ("c"+ : "y"*) | ("":"fric")) "a"];
export BitFlip1 = Optimize[ (("0":"1") | ("1" : "0"))* ];
export BitFlip2 = CDRewrite [BitFlip1, "", "", Digit*];
export Parity1 = Optimize [ (Even : Zero) | (Odd : One)];
export Parity2 = Optimize [Reverse [(RevEven : Zero ) | (RevOdd : One)]];
export Parity3 = CDRewrite [Parity1, "[BOS]", "[EOS]", Bit*];
export UnParity = Invert[Parity3];
export Split = CDRewrite [("" : " "), Bit, Bit, Bit*, 'sim', 'opt'];
export Three = Optimize [Bit+ " " Bit+ " " Bit+];
export SplitThree = (Split @ Three); 