SUBJECT: Re : &NUM Arrays Hi &NAME , Here 's a little test prog I put together that shows a fairly easy way of using &NUM arrays : @test ; $ size_x_axis &NUM ; $ size_y_axis &NUM ; $ test [ &NAME [ &NUM ] &NUM ; $ test [ &NAME [ &NUM ] &NUM ; $ test [ &NAME [ &NUM ] &NUM ; $ test [ &NAME [ &NUM ] &NUM ; for ( $ x0 ; $ &CHAR ( $ size_x_axis ; $ x++ ) { for ( $ y0 ; $ &CHAR ( $ size_y_axis ; $ y++ ) { print $ test [ $ x] [ $ &CHAR ] . ' &CHAR ' ; output : &NUM &NUM &NUM &NUM &NUM hashes are also very easy to use , in a similar way . The only funny thing about this is you only specify the size of the &CHAR and &CHAR axes for the purposes of looping - the actual arrays are allocated dynamically and implicitly by perl . Later , &CHAR <QUOTE> Hi &NAME , I 'm supposed to meet &NAME this afternoon so I 'll be at the &NAME I put something together as an attempt to implement the algorithm . Could you have a look when you are free . I 'm not at all certain how to give a &NUM array Is there a way I could just use a &CHAR like notation &NAME [ x] [ &CHAR ] - There was a suggestion on the web about a hash . undef %hash $ hash [ $ x, $ y } Is hash a reserved word or just %StateArray ? Do you know whether it will work ? See you soon , &NAME . <END_QUOTE> 